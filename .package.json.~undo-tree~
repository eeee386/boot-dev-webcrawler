(undo-tree-save-format-version . 1)
"d01867b1939f87b859116b77a3634a2ab52245a5"
[nil nil nil nil (25799 61150 423546 622000) 0 nil]
([nil nil ((164 . 169) (t 25799 60445 219624 935000)) nil (25799 61150 423543 269000) 0 nil])
([nil nil ((170 . 175) (169 . 171) (#("\"" 0 1 (fontified nil)) . -169) (169 . 170)) nil (25799 61150 423539 917000) 0 nil])
([nil nil ((179 . 185) (178 . 180) (#("\"" 0 1 (fontified nil)) . -178) (176 . 179)) nil (25799 61150 423536 76000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -180) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -181) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:string)) . -182) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -183) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -184) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 185) nil (25799 61150 423531 746000) 0 nil])
([nil nil ((180 . 192)) nil (25799 61150 423438 718000) 0 nil])
([nil nil ((164 . 165) (t 25799 61150 432347 598000)) nil (25799 61153 150648 275000) 0 nil])
([nil nil ((194 . 195) (t 25799 61153 157290 825000)) nil (25799 61156 20112 237000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -194) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 195 (t 25799 61156 28231 150000)) nil (25799 61162 732705 356000) 0 nil])
([nil nil ((234 . 289) (t 25799 61162 739092 219000)) nil (25800 1650 132878 42000) 0 nil])
([nil nil ((180 . 196) (t 25799 61575 717700 663000)) nil (25800 1650 132876 86000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:string)) . -182) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -183) (undo-tree-id43 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -184) (undo-tree-id44 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -185) (undo-tree-id45 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:string)) . -186) (undo-tree-id46 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -187) (undo-tree-id47 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:string)) . -188) (undo-tree-id48 . -1) (#("." 0 1 (fontified t face tree-sitter-hl-face:string)) . -189) (undo-tree-id49 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -190) (undo-tree-id50 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -191) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -192) (undo-tree-id52 . -1) (#("&" 0 1 (fontified t face tree-sitter-hl-face:string)) . -193) (undo-tree-id53 . -1) (#("&" 0 1 (fontified t face tree-sitter-hl-face:string)) . -194) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -195) (undo-tree-id55 . -1) 196 (t 25799 64688 308522 559000)) nil (25800 1650 132872 803000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -180) (undo-tree-id40 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -181) (undo-tree-id41 . -1) 182) nil (25800 1650 132864 631000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face tree-sitter-hl-face:string)) . -191) (undo-tree-id39 . -1) 192) nil (25800 1650 132860 789000) 0 nil])
([nil nil ((191 . 192)) nil (25800 1650 132848 915000) 0 nil])
([nil nil ((67 . 226) (#("\",
  \"main\": \"index.js\",
  \"scripts\": {
    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",
    \"start\": \"node index.ts\"
  },
  \"author\": \"\",
  \"license\": \"ISC\",
  \"devDependencies\": {
    \"typescript\": \"^5.1.6\"
  }" 0 1 (fontified t face tree-sitter-hl-face:string) 1 5 (fontified t) 5 11 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 11 13 (fontified t) 13 23 (fontified t face tree-sitter-hl-face:string) 23 27 (fontified t) 27 36 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 36 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation\.bracket)) 39 40 (fontified t) 40 44 (fontified t) 44 50 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 50 52 (fontified t) 52 58 (fontified t face tree-sitter-hl-face:string) 58 60 (fontified t face (tree-sitter-hl-face:escape tree-sitter-hl-face:string)) 60 84 (fontified t face tree-sitter-hl-face:string) 84 86 (fontified t face (tree-sitter-hl-face:escape tree-sitter-hl-face:string)) 86 97 (fontified t face tree-sitter-hl-face:string) 97 98 (fontified t) 98 99 (fontified t) 99 103 (fontified t) 103 110 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 110 112 (fontified t) 112 113 (fontified t face tree-sitter-hl-face:string) 113 127 (fontified t face tree-sitter-hl-face:string) 127 128 (fontified t) 128 130 (fontified t) 130 131 (fontified t face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation\.bracket)) 131 135 (fontified t) 135 143 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 143 145 (fontified t) 145 147 (fontified t face tree-sitter-hl-face:string) 147 149 (fontified t) 149 151 (fontified t) 151 160 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 160 162 (fontified t) 162 167 (fontified t face tree-sitter-hl-face:string) 167 171 (fontified t) 171 188 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 188 190 (fontified t) 190 191 (fontified t face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation\.bracket)) 191 196 (fontified t) 196 208 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:string)) 208 210 (fontified t) 210 218 (fontified t face tree-sitter-hl-face:string) 218 221 (fontified t) 221 222 (fontified t face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation\.bracket))) . 67) (undo-tree-id57 . 97) (undo-tree-id58 . -126) (t 25800 1650 232795 639000)) nil (25800 2306 898838 424000) 0 nil])
([nil nil ((226 . 281) (t 25800 2106 787410 5000)) nil (25800 2306 898835 142000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face tree-sitter-hl-face:string)) . -109) (undo-tree-id56 . -1) 110 (t 25800 2269 689302 761000)) nil (25800 2306 898833 675000) 0 nil])
([nil nil ((109 . 110)) nil (25800 2306 898801 686000) 0 nil])
([nil nil ((128 . 133)) nil (25800 2306 898800 708000) 0 nil])
([nil nil ((134 . 139) (133 . 135) (#("\"" 0 1 (fontified nil)) . -133) (133 . 134)) nil (25800 2306 898799 242000) 0 nil])
([nil nil ((143 . 153) (142 . 144) (#("\"" 0 1 (fontified nil)) . -142) (140 . 143)) nil (25800 2306 898797 286000) 0 nil])
([nil nil ((153 . 155)) nil (25800 2306 898795 400000) 0 nil])
([nil nil ((156 . 157)) nil (25800 2306 898790 651000) 0 nil])
([nil nil ((285 . 308) (t 25800 2306 997618 325000)) nil (25800 3757 164939 21000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -204) (undo-tree-id164 . -1) (#("&" 0 1 (fontified t face tree-sitter-hl-face:string)) . -205) (undo-tree-id165 . -1) (#("&" 0 1 (fontified t face tree-sitter-hl-face:string)) . -206) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -207) (undo-tree-id167 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -208) (undo-tree-id168 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:string)) . -209) (undo-tree-id169 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -210) (undo-tree-id170 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -211) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -212) (undo-tree-id172 . -1) (#("1" 0 1 (fontified t face tree-sitter-hl-face:string)) . -213) (undo-tree-id173 . -1) 214 (t 25800 3668 119917 955000)) nil (25800 3757 164935 669000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face (tree-sitter-hl-face:escape tree-sitter-hl-face:string))) . -203) (undo-tree-id163 . -1) (#("\"" 0 1 (fontified t face tree-sitter-hl-face:string)) . 204)) nil (25800 3757 164929 942000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:string)) . -182) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#(":" 0 1 (fontified t face tree-sitter-hl-face:string)) . -183) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -184) (undo-tree-id143 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -185) (undo-tree-id144 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -186) (undo-tree-id145 . 1) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -187) (undo-tree-id147 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -188) (undo-tree-id148 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -189) (undo-tree-id149 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -190) (undo-tree-id150 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -191) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -192) (undo-tree-id152 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -193) (undo-tree-id153 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:string)) . -194) (undo-tree-id154 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -195) (undo-tree-id155 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:string)) . -196) (undo-tree-id156 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -197) (undo-tree-id157 . -1) (#("f" 0 1 (fontified t face tree-sitter-hl-face:string)) . -198) (undo-tree-id158 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -199) (undo-tree-id159 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -200) (undo-tree-id160 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:string)) . -201) (undo-tree-id161 . -1) (#("\\" 0 1 (fontified t face tree-sitter-hl-face:string)) . -202) (undo-tree-id162 . -1) 203) nil (25800 3757 164925 53000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -171) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:string)) . -172) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:string)) . -173) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -174) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -175) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("\\" 0 1 (fontified t face tree-sitter-hl-face:string)) . -176) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("\"" 0 1 (fontified t face (tree-sitter-hl-face:escape tree-sitter-hl-face:string))) . -177) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("E" 0 1 (fontified t face tree-sitter-hl-face:string)) . -178) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:string)) . -179) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("r" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -180) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("o" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -181) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 182) nil (25800 3757 164908 641000) 0 nil])
([nil nil ((171 . 175)) nil (25800 3757 164535 978000) 0 nil])
([nil current ((175 . 176) (#("\"" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -175) (175 . 176)) nil (25800 3757 164530 321000) 0 nil])
nil
